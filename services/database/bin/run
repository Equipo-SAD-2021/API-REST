#!/usr/bin/env node
const axios = require('axios');
const http = require('http');

const config = require('../config')[process.env.NODE_ENV || 'development'];

const log = config.log();

require('../server/service').Init(config).then(({service, idbc}) => {
    if (service == null) {
        log.error("Failed initialising service, exiting...");
        process.exit();
    } else {
        const server = http.createServer(service);
    
        // Important - a service should not have a fixed port but should randomly choose one
        server.listen(0);
    
        server.on('listening', () => {
            const registerService = () => axios.put(`http://localhost:3000/register/${config.name}/${config.version}/${server.address().port}`);
    
            registerService();
    
            const interval = setInterval(registerService, 5000);
    
            log.info(
                `Hi there! I'm listening on port ${server.address().port} in ${service.get('env')} mode.`,
            );
        });
    
        var dbCleanedUp = false;
        async function databaseCleanup() {
            if (dbCleanedUp === false && idbc != null) {
                await idbc.Close();
                dbCleanedUp = true;
            }
        }
    
        process.on("SIGINT", databaseCleanup);
        process.on("beforeExit", databaseCleanup)
    }
});


